{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","users","todo","className","href","find","user","TodoInfo","maxId","TodoList","todos","map","Math","max","el","App","useState","selectedUser","setSelectedUser","setTitle","showTitlePrompt","setShowTitlePrompt","showUserPrompt","setShowUserPrompt","usersFromServer","todosFromServer","regex","onSubmit","event","preventDefault","length","action","htmlFor","placeholder","type","value","onChange","test","target","e","disabled","defaultChecked","onClick","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f855d128.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\n\ntype Props = {\n  users: Array<User>\n  todo: Todo\n};\n\nexport const UserInfo = ({ users, todo }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${users.find(user => user.id === todo.userId)?.email}`}>\n      {users.find(user => user.id === todo.userId)?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n  users: Array<User>\n  maxId: number\n};\n\nexport const TodoInfo = ({ todo, users, maxId }: Props) => {\n  return (\n    <article\n      data-id={maxId}\n      className={todo.completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo todo={todo} users={users} />\n    </article>\n  );\n};\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Array<Todo>,\n  users: Array<User>\n};\n\nexport const TodoList = ({ todos, users }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            maxId={Math.max(...todos.map(el => el.id))}\n            todo={todo}\n            users={users}\n          />\n        );\n      })}\n\n    </section>\n  );\n};\n","import './App.scss';\nimport { FormEventHandler, useState } from 'react';\nimport { User } from './type/user';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './type/todo';\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [title, setTitle] = useState('');\n  const [showTitlePrompt, setShowTitlePrompt] = useState(false);\n  const [showUserPrompt, setShowUserPrompt] = useState(false);\n  const users: Array<User> = usersFromServer;\n  const todos: Array<Todo> = todosFromServer;\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    if (title.length !== 0 && selectedUser !== '') {\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  const handleClick = () => {\n    if (title.length === 0) {\n      setShowTitlePrompt(true);\n    }\n\n    if (selectedUser === '') {\n      setShowUserPrompt(true);\n    }\n\n    if (title.length !== 0 && selectedUser !== '') {\n      todos.push(\n        {\n          id: Math.max(...todos.map(el => el.id)) + 1,\n          title,\n          completed: false,\n          userId: users\n            .find(user => user.name === selectedUser)?.id as number,\n        },\n      );\n    }\n  };\n\n  const regex = /^[0-9a-zA-Z\\s]+$/;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            onChange={(event) => {\n              if (regex.test(event.target.value)) {\n                setTitle(event.target.value);\n                setShowTitlePrompt(false);\n              }\n            }}\n          />\n          {showTitlePrompt\n          && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectUser\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"selectUser\"\n            name=\"selectUser\"\n            value={selectedUser}\n            onChange={(e) => {\n              setSelectedUser(e.target.value);\n              setShowUserPrompt(false);\n            }}\n          >\n            <option value=\"\" disabled defaultChecked>\n              Choose a user\n            </option>\n            {users.map(user => {\n              return <option>{user.name}</option>;\n            })}\n          </select>\n          {showUserPrompt\n            && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleClick}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} users={users} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}